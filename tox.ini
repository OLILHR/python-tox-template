[tox]
envlist =
    coverage
    linting
    spellchecking
    testing
    typechecking
skip_missing_interpreters = True
skipsdist = True

[testenv]
commands = python -m pip install --upgrade pip

[testenv:coverage]
changedir = unittests
deps =
    {[testenv:testing]deps}
    .[coverage]
setenv = PYTHONPATH = {toxinidir}/src
commands =
    coverage run -m pytest --basetemp={envtmpdir} {posargs}
    coverage html --omit .tox/*,unittests/*
    coverage report --fail-under 80 --omit .tox/*,unittests/*

[testenv:linting]
deps =
    {[testenv:testing]deps}
    .[linting]
setenv = PYTHONPATH = {toxinidir}/src
commands =
    pylint package
    pylint unittests --rcfile=unittests/.pylintrc

[testenv:spellchecking]
setenv = PYTHONPATH = {toxinidir}/src
deps =
    -r requirements.txt
    .[spellchecking]
commands =
    codespell src/
    codespell README.md

[testenv:testing]
deps =
    -r requirements.txt
    .[testing]
setenv = PYTHONPATH = {toxinidir}/src
commands = python -m pytest -x --basetemp={envtmpdir} {posargs}

[testenv:typechecking]
setenv = PYTHONPATH = {toxinidir}/src
deps =
    {[testenv:testing]deps}
    .[typechecking]
commands =
    mypy --show-error-codes src/package --strict
    mypy --show-error-codes unittests --strict

[testenv:dev]
deps =
    {[testenv:coverage]deps}
    {[testenv:linting]deps}
    {[testenv:packaging]deps}
    {[testenv:spellchecking]deps}
    {[testenv:testing]deps}
    {[testenv:typechecking]deps}
    .[formatting]
    .[dev]
commands =
    python -m pip install --upgrade pip
    pip install -r requirements.txt

[testenv:packaging]
skip_install = true
deps =
    .[packaging]
commands =
    python -m build
    twine check dist/*